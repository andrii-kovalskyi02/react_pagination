{"version":3,"sources":["utils/searchHelper.ts","components/Pagination/Pagination.tsx","utils/getNumbers.ts","Pages/PaginationPage.tsx","App.tsx","index.tsx"],"names":["getSearchWith","currentParams","paramsToUpdate","newParams","URLSearchParams","toString","Object","entries","forEach","key","value","delete","Array","isArray","part","append","set","Pagination","pages","currentPage","itemsToShow","useSearchParams","searchParams","isFirstPage","isLastPage","length","className","classNames","disabled","to","search","page","map","active","item","getNumbers","from","numbers","n","push","items","PaginationPage","setSearchParams","get","perPage","useEffect","handleSelectChange","useCallback","target","calculateItemRange","itemsPerPage","elements","startIndex","endIndex","Math","min","slice","id","onChange","htmlFor","ceil","App","index","element","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b3ede7af.chunk.js","sourcesContent":["export type SearchParams = {\n  [key: string]: string | string[] | null,\n};\n\nexport function getSearchWith(\n  currentParams: URLSearchParams,\n  paramsToUpdate: SearchParams,\n): string {\n  const newParams = new URLSearchParams(\n    currentParams.toString(),\n  );\n\n  Object.entries(paramsToUpdate)\n    .forEach(([key, value]) => {\n      if (value === null) {\n        newParams.delete(key);\n      } else if (Array.isArray(value)) {\n        newParams.delete(key);\n\n        value.forEach(part => {\n          newParams.append(key, part);\n        });\n      } else {\n        newParams.set(key, value);\n      }\n    });\n\n  return newParams.toString();\n}\n","import { FC } from 'react';\nimport { Link, useSearchParams } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { getSearchWith } from '../../utils/searchHelper';\n\ntype Props = {\n  currentPage: string,\n  itemsToShow: string[],\n  pages: string[],\n};\n\nexport const Pagination: FC<Props> = ({ pages, currentPage, itemsToShow }) => {\n  const [searchParams] = useSearchParams();\n  const isFirstPage = currentPage === pages[0];\n  const isLastPage = currentPage === pages[pages.length - 1];\n\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li\n          className={classNames('page-item', {\n            disabled: isFirstPage,\n          })}\n        >\n          <Link\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            to={{\n              search: getSearchWith(searchParams, { page: `${+currentPage - 1}` }),\n            }}\n            aria-disabled={isFirstPage ? 'true' : 'false'}\n          >\n            «\n          </Link>\n        </li>\n\n        {pages.map(page => (\n          <li\n            key={page}\n            className={classNames('page-item', {\n              active: page === currentPage,\n            })}\n          >\n            <Link\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n              to={{\n                search: getSearchWith(searchParams, { page }),\n              }}\n            >\n              {page}\n            </Link>\n          </li>\n        ))}\n\n        <li\n          className={classNames('page-item', {\n            disabled: isLastPage,\n          })}\n        >\n          <Link\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            to={{\n              search: getSearchWith(searchParams, { page: `${+currentPage + 1}` }),\n            }}\n            aria-disabled={isLastPage ? 'true' : 'false'}\n          >\n            »\n          </Link>\n        </li>\n      </ul>\n\n      <ul>\n        {itemsToShow.map(item => (\n          <li\n            key={item}\n            data-cy=\"item\"\n          >\n            {`Item ${item}`}\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n","export function getNumbers(from: number, to: number): string[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n.toString());\n  }\n\n  return numbers;\n}\n","import { FC, useCallback, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { Pagination } from '../components/Pagination';\nimport { getSearchWith } from '../utils/searchHelper';\nimport { getNumbers } from '../utils/getNumbers';\n\nconst totalNumberOfItems = 42;\nconst items = getNumbers(1, totalNumberOfItems);\n\nexport const PaginationPage: FC = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const page = searchParams.get('page') || '';\n  const perPage = searchParams.get('perPage') || '';\n\n  useEffect(() => {\n    setSearchParams(\n      getSearchWith(searchParams, { page: '1', perPage: '5' }),\n    );\n  }, []);\n\n  useEffect(() => {\n    setSearchParams(\n      getSearchWith(searchParams, { page: '1' }),\n    );\n  }, [perPage]);\n\n  const handleSelectChange = useCallback(\n    ({ target: { value } }: React.ChangeEvent<HTMLSelectElement>) => {\n      setSearchParams(getSearchWith(searchParams, { perPage: value }));\n    }, [searchParams],\n  );\n\n  const calculateItemRange = useCallback(\n    (\n      currentPage: string,\n      itemsPerPage: string,\n      elements?: string[],\n    ) => {\n      const startIndex = (+currentPage - 1) * +itemsPerPage;\n      const endIndex = Math.min(startIndex + +itemsPerPage, totalNumberOfItems);\n\n      return elements\n        ? elements.slice(startIndex, endIndex)\n        : [`${startIndex + 1} - ${endIndex}`];\n    }, [totalNumberOfItems],\n  );\n\n  return (\n    <>\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${page} (items ${calculateItemRange(page, perPage)} of ${totalNumberOfItems})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={handleSelectChange}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        currentPage={page}\n        itemsToShow={calculateItemRange(page, perPage, items)}\n        pages={getNumbers(1, Math.ceil(totalNumberOfItems / +perPage))}\n      />\n    </>\n  );\n};\n","import { FC } from 'react';\nimport { Route, Routes } from 'react-router-dom';\nimport { PaginationPage } from './Pages/PaginationPage';\n\nimport './App.css';\n\nexport const App: FC = () => {\n  return (\n    <div className=\"container\">\n      <Routes>\n        <Route index element={<PaginationPage />} />\n      </Routes>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}